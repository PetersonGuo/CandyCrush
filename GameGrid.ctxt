#BlueJ class context
comment0.target=GameGrid
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Gamecandies\ here.\r\n\ For\ efficiency\ only\ check\ x\ dir\ and\ upwards\ y\ direction\ of\ box\ of\ lowest\ changed\ candy\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=width\ height
comment1.target=GameGrid(int,\ int)
comment10.params=
comment10.target=boolean\ checkCandies()
comment10.text=\r\n\ Check\ the\ candies\ to\ see\ if\ there\ are\ any\ possible\ matches\r\n\ Assumes\ all\ matches\ are\ already\ destroyed\r\n
comment11.params=
comment11.target=void\ reshuffle()
comment12.params=
comment12.target=boolean\ checkMatching()
comment12.text=\r\n\ Check\ through\ the\ candies\ to\ destroy\ any\ currently\ matching\ candies\r\n\ Dumb\ algorithm\ to\ iterate\ over\ everything\r\n
comment13.params=lowX\ highX\ y
comment13.target=boolean\ checkMatching(int,\ int,\ int)
comment13.text=\r\n\ Check\ through\ the\ candies\ to\ destroy\ any\ currently\ matching\ candies\r\n\ Smart\ algorithm\ to\ only\ destroy\ all\ matching\ within\ a\ bound\r\n
comment14.params=i\ j\ dir
comment14.target=Triple\ match(int,\ int,\ boolean)
comment14.text=\r\n\ Check\ length\ of\ matching\ candies\ in\ a\ specified\ direction\r\n\ \r\n\ @param\ i\ The\ x\ coordinate\ of\ the\ candies\ to\ start\ at\r\n\ @param\ j\ The\ y\ coordinate\ of\ the\ candies\ to\ start\ at\r\n\ @param\ dir\ The\ direction\ to\ check,\ 0\ is\ the\ x\ axis,\ 1\ is\ the\ y\ axis\r\n\ \r\n\ @return\ int\ The\ length\ of\ the\ chain\ of\ matching\ candies\r\n
comment15.params=i\ j
comment15.target=boolean\ validCoor(int,\ int)
comment15.text=\r\n\ Check\ if\ given\ x\ and\ y\ coordinates\ are\ within\ bounds\ of\ the\ candies\r\n
comment16.params=a\ b
comment16.target=boolean\ validSwap(Pair,\ Pair)
comment16.text=\r\n\ Check\ if\ user\ made\ a\ valid\ swap\ and\ swap\ back\ if\ not\ valid\r\n
comment17.params=p
comment17.target=void\ removeFromWorld(Pair)
comment18.params=
comment18.target=void\ drop()
comment19.params=
comment19.target=Pair\ checkNullCandy()
comment2.params=w
comment2.target=void\ addedToWorld(greenfoot.World)
comment20.params=a\ b
comment20.target=void\ swap(Pair,\ Pair)
comment20.text=\r\n\ Helper\ function\r\n
comment21.params=a\ b
comment21.target=void\ swapGraphics(Pair,\ Pair)
comment22.params=
comment22.target=void\ clearAll()
comment23.params=c
comment23.target=void\ clearRow(Candy)
comment24.params=row
comment24.target=void\ clearRow(int)
comment25.params=c
comment25.target=void\ clearCol(Candy)
comment26.params=col
comment26.target=void\ clearCol(int)
comment27.params=c
comment27.target=void\ clearColour(Colour)
comment28.params=row
comment28.target=Candy[]\ getRow(int)
comment29.params=c
comment29.target=void\ getExploGrid(Candy)
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Act\ -\ do\ whatever\ the\ Gamecandies\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment30.params=
comment30.target=Candy[]\ getCandies()
comment31.params=c
comment31.target=Pair\ getGridCoor(Candy)
comment4.params=i\ j
comment4.target=void\ addCandy(int,\ int)
comment5.params=i\ j
comment5.target=void\ addIngredient(int,\ int)
comment6.params=
comment6.target=void\ addIngredient()
comment7.params=i\ j\ type\ c\ vertical
comment7.target=void\ addCandy(int,\ int,\ Specials,\ Colour,\ boolean)
comment8.params=
comment8.target=void\ addCandies()
comment9.params=
comment9.target=void\ removeMatching()
numComments=32
