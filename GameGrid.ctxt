#BlueJ class context
comment0.target=GameGrid
comment0.text=\n\ Write\ a\ description\ of\ class\ Gamecandies\ here.\n\ For\ efficiency\ only\ check\ x\ dir\ and\ upwards\ y\ direction\ of\ box\ of\ lowest\ changed\ candy\n\ \n\ @author\ (your\ name)\ \n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=width\ height
comment1.target=GameGrid(int,\ int)
comment10.params=i\ j
comment10.target=boolean\ validCoor(int,\ int)
comment10.text=\n\ Check\ if\ given\ x\ and\ y\ coordinates\ are\ within\ bounds\ of\ the\ candies\n
comment11.params=
comment11.target=void\ printArray()
comment12.params=a\ b
comment12.target=void\ validSwap(Pair,\ Pair)
comment12.text=\n\ Check\ if\ user\ made\ a\ valid\ swap\ and\ swap\ back\ if\ not\ valid\n
comment13.params=
comment13.target=void\ drop()
comment14.params=c
comment14.target=void\ dropGraphics(Candy)
comment15.params=
comment15.target=Pair\ checkNullCandy()
comment16.params=row\ col
comment16.target=void\ moveDown(int,\ int)
comment17.params=a\ b
comment17.target=void\ swap(Pair,\ Pair)
comment17.text=\n\ Helper\ function\n
comment18.params=a\ b
comment18.target=void\ swapGraphics(Pair,\ Pair)
comment19.params=c
comment19.target=Candy[]\ getRow(Candy)
comment2.params=w
comment2.target=void\ addedToWorld(greenfoot.World)
comment20.params=c
comment20.target=Candy[]\ getColumn(Candy)
comment21.params=c
comment21.target=Candy[]\ getExploGrid(Candy)
comment22.params=
comment22.target=Candy[]\ getCandies()
comment23.params=c
comment23.target=Pair\ getGridCoor(Candy)
comment3.params=
comment3.target=void\ act()
comment3.text=\n\ Act\ -\ do\ whatever\ the\ Gamecandies\ wants\ to\ do.\ This\ method\ is\ called\ whenever\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\n
comment4.params=
comment4.target=void\ addCandies()
comment5.params=
comment5.target=boolean\ checkCandies()
comment5.text=\n\ Check\ the\ candies\ to\ see\ if\ there\ are\ any\ possible\ matches\n\ Assumes\ all\ matches\ are\ already\ destroyed\n
comment6.params=
comment6.target=boolean\ checkMatching()
comment6.text=\n\ Check\ through\ the\ candies\ to\ destroy\ any\ currently\ matching\ candies\n\ Dumb\ algorithm\ to\ iterate\ over\ everything\n
comment7.params=lowX\ highX\ y
comment7.target=boolean\ checkMatching(int,\ int,\ int)
comment7.text=\n\ Check\ through\ the\ candies\ to\ destroy\ any\ currently\ matching\ candies\n\ Smart\ algorithm\ to\ only\ destroy\ all\ matching\ within\ a\ bound\n
comment8.params=
comment8.target=int\ floodfill()
comment9.params=i\ j\ dir
comment9.target=int\ match(int,\ int,\ boolean)
comment9.text=\n\ Check\ length\ of\ matching\ candies\ in\ a\ specified\ direction\n\ \n\ @param\ i\ The\ x\ coordinate\ of\ the\ candies\ to\ start\ at\n\ @param\ j\ The\ y\ coordinate\ of\ the\ candies\ to\ start\ at\n\ @param\ dir\ The\ direction\ to\ check,\ 0\ is\ the\ x\ axis,\ 1\ is\ the\ y\ axis\n\ \n\ @return\ int\ The\ length\ of\ the\ chain\ of\ matching\ candies\n
numComments=24
