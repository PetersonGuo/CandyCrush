#BlueJ class context
comment0.target=GameGrid
comment0.text=\r\n\ This\ class\ called\ GameGrid\ is\ where\ the\ game\ mainly\ takes\ place.\r\n\ It\ allows\ the\ game\ to\ do\ the\ matching,\ dropping,\ creation\ of\ special\r\n\ candies,\ removal\ of\ candies,\ and\ completing\ objectives.\ Additionally,\ \r\n\ they\ allow\ special\ candies\ to\ use\ their\ abilities.\r\n\ \r\n\ @author\ Peterson\ Guo,\ Kelby\ To\ \r\n\ @version\ June\ 15,\ 2023\r\n
comment1.params=width\ height
comment1.target=GameGrid(int,\ int)
comment1.text=\r\n\ A\ constructor\ for\ the\ game\ grid\ that\ takes\ in\ the\ width\ and\ height\ of\ the\ grid.\r\n\ @param\ width\ The\ width\ of\ the\ grid\r\n\ @param\ height\ The\ height\ of\ the\ grid\r\n
comment10.params=
comment10.target=boolean\ checkCandies()
comment10.text=\r\n\ Check\ the\ candies\ to\ see\ if\ there\ are\ any\ possible\ matches\r\n\ Assumes\ all\ matches\ are\ already\ destroyed\r\n\ @return\ true\ if\ there\ are\ possible\ matches,\ false\ otherwise\r\n
comment11.params=
comment11.target=void\ reshuffle()
comment11.text=\r\n\ Randomly\ reshuffle\ the\ candies\r\n
comment12.params=
comment12.target=boolean\ checkMatching()
comment12.text=\r\n\ Check\ through\ the\ candies\ to\ destroy\ any\ currently\ matching\ candies\r\n\ Dumb\ algorithm\ to\ iterate\ over\ everything\r\n\ @return\ true\ if\ there\ are\ any\ matches,\ false\ otherwise\r\n
comment13.params=lowX\ highX\ y
comment13.target=boolean\ checkMatching(int,\ int,\ int)
comment13.text=\r\n\ Check\ through\ the\ candies\ to\ destroy\ any\ currently\ matching\ candies\r\n\ Smart\ algorithm\ to\ only\ destroy\ all\ matching\ within\ a\ bound\r\n\ @param\ lowX\ the\ lowest\ x\ value\ to\ check\r\n\ @param\ highX\ the\ highest\ x\ value\ to\ check\r\n\ @param\ y\ the\ highest\ y\ value\ to\ start\ from\r\n
comment14.params=i\ j\ dir
comment14.target=Triple\ match(int,\ int,\ boolean)
comment14.text=\r\n\ Check\ length\ of\ matching\ candies\ in\ a\ specified\ direction\r\n\ \r\n\ @param\ i\ The\ x\ coordinate\ of\ the\ candies\ to\ start\ at\r\n\ @param\ j\ The\ y\ coordinate\ of\ the\ candies\ to\ start\ at\r\n\ @param\ dir\ The\ direction\ to\ check,\ 0\ is\ the\ x\ axis,\ 1\ is\ the\ y\ axis\r\n\ \r\n\ @return\ Triple<Integer,\ Integer,\ Integer>\ A\ triple\ containing\ the\ start\ and\ end\ coordinates\ of\ the\ matching\ candies\r\n
comment15.params=i\ j
comment15.target=boolean\ validCoor(int,\ int)
comment15.text=\r\n\ Check\ if\ given\ x\ and\ y\ coordinates\ are\ within\ bounds\ of\ the\ candies\r\n\ \r\n\ @param\ i\ The\ x\ coordinate\ to\ check\r\n\ @param\ j\ The\ y\ coordinate\ to\ check\r\n\ \r\n\ @return\ true\ if\ the\ coordinates\ are\ valid,\ false\ otherwise\r\n
comment16.params=a\ b
comment16.target=boolean\ validSwap(Pair,\ Pair)
comment16.text=\r\n\ Check\ if\ user\ made\ a\ valid\ swap\ and\ swap\ back\ if\ not\ valid\r\n\ \r\n\ @param\ a\ The\ first\ candy\ to\ swap\r\n\ @param\ b\ The\ second\ candy\ to\ swap\r\n\ \r\n\ @return\ true\ if\ the\ swap\ was\ valid,\ false\ otherwise\r\n
comment17.params=p
comment17.target=void\ removeFromWorld(Pair)
comment17.text=\r\n\ Remove\ candy\ at\ given\ coordinates\ from\ the\ world\r\n\ \r\n\ @param\ p\ The\ coordinates\ of\ the\ candy\ to\ remove\r\n
comment18.params=
comment18.target=void\ drop()
comment18.text=\r\n\ Move\ all\ candies\ down\ to\ fill\ in\ empty\ spaces\r\n
comment19.params=
comment19.target=Pair\ checkNullCandy()
comment19.text=\r\n\ Check\ if\ there\ are\ any\ null\ candies\r\n\ \r\n\ @return\ Pair<Integer,\ Integer>\ The\ coordinates\ of\ the\ null\ candy,\ null\ if\ there\ are\ none\r\n
comment2.params=w
comment2.target=void\ addedToWorld(greenfoot.World)
comment20.params=a\ b
comment20.target=void\ swap(Pair,\ Pair)
comment20.text=\r\n\ Swap\ two\ candies\r\n\ \r\n\ @param\ a\ The\ first\ candy\ to\ swap\r\n\ @param\ b\ The\ second\ candy\ to\ swap\r\n
comment21.params=a\ b
comment21.target=void\ swapGraphics(Pair,\ Pair)
comment21.text=\r\n\ Swap\ the\ graphics\ of\ two\ candies\r\n\ \r\n\ @param\ a\ The\ first\ candy\ to\ swap\r\n\ @param\ b\ The\ second\ candy\ to\ swap\r\n
comment22.params=
comment22.target=void\ clearAll()
comment22.text=\r\n\ Clear\ all\ candies\ on\ board\r\n
comment23.params=c
comment23.target=void\ clearRow(Candy)
comment23.text=\r\n\ Clear\ all\ candies\ in\ a\ given\ row\r\n\ @param\ c\ The\ candy\ to\ clear\ the\ row\ of\r\n
comment24.params=row
comment24.target=void\ clearRow(int)
comment24.text=\r\n\ Clear\ all\ candies\ in\ a\ given\ row\r\n\ @param\ row\ The\ row\ to\ clear\r\n
comment25.params=c
comment25.target=void\ clearCol(Candy)
comment25.text=\r\n\ Clear\ all\ candies\ in\ a\ given\ column\r\n\ @param\ c\ The\ candy\ to\ clear\ the\ column\ of\r\n
comment26.params=col
comment26.target=void\ clearCol(int)
comment26.text=\r\n\ Clear\ all\ candies\ in\ a\ given\ column\r\n\ @param\ col\ The\ column\ to\ clear\r\n
comment27.params=c
comment27.target=void\ clearColour(Colour)
comment27.text=\r\n\ Clear\ all\ candies\ of\ a\ given\ colour\r\n\ @param\ c\ The\ colour\ to\ clear\r\n
comment28.params=row
comment28.target=Candy[]\ getRow(int)
comment28.text=\r\n\ Get\ row\ of\ candies\r\n\ @param\ row\ The\ row\ to\ get\r\n\ @return\ Candy[]\ The\ row\ of\ candies\r\n
comment29.params=c
comment29.target=void\ getExploGrid(Candy)
comment29.text=\r\n\ Get\ explosion\ grid\ of\ a\ candy\r\n\ @param\ c\ The\ candy\ to\ get\ the\ explosion\ grid\ of\r\n
comment3.params=
comment3.target=void\ act()
comment30.params=
comment30.target=Candy[]\ getCandies()
comment30.text=\r\n\ Get\ candies\ in\ a\ 1D\ array\r\n\ @return\ Candy[]\ The\ candies\ in\ a\ singular\ array\r\n
comment31.params=c
comment31.target=Pair\ getGridCoor(Candy)
comment31.text=\r\n\ Get\ the\ coordinates\ of\ a\ candy\r\n\ @param\ c\ The\ candy\ to\ get\ the\ coordinates\ of\r\n\ @return\ Pair<Integer,\ Integer>\ The\ coordinates\ of\ the\ candy\r\n
comment4.params=i\ j
comment4.target=void\ addCandy(int,\ int)
comment4.text=\r\n\ A\ method\ that\ adds\ a\ candy\ to\ the\ grid\r\n\ @param\ i\ The\ row\ of\ the\ candy\r\n\ @param\ j\ The\ column\ of\ the\ candy\r\n
comment5.params=i\ j
comment5.target=void\ addIngredient(int,\ int)
comment6.params=
comment6.target=void\ addIngredient()
comment7.params=i\ j\ type\ c\ vertical
comment7.target=void\ addCandy(int,\ int,\ Specials,\ Colour,\ boolean)
comment7.text=\r\n\ A\ method\ that\ adds\ a\ special\ candy\ to\ the\ grid\r\n\ @param\ i\ The\ row\ of\ the\ candy\r\n\ @param\ j\ The\ column\ of\ the\ candy\r\n\ @param\ type\ The\ type\ of\ special\ candy\r\n\ @param\ c\ The\ colour\ of\ the\ candy\r\n\ @param\ vertical\ Whether\ the\ candy\ is\ vertical\ or\ not\r\n
comment8.params=
comment8.target=void\ addCandies()
comment8.text=\r\n\ A\ method\ that\ adds\ candies\ to\ the\ grid\ when\ the\ world\ begins\r\n
comment9.params=
comment9.target=void\ removeMatching()
comment9.text=\r\n\ A\ method\ that\ removes\ all\ matching\ candies\ from\ the\ grid\r\n
numComments=32
