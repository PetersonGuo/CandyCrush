#BlueJ class context
comment0.target=MainWorld
comment0.text=\r\n\ The\ main\ world\ runs\ the\ main\ portion\ of\ the\ game.\ This\ game\ is\ an\ iteration\r\n\ of\ the\ game\ Candy\ Crush\ where\ the\ goal\ is\ to\ get\ the\ highest\ score\ while\ \r\n\ completing\ the\ main\ objective,\ determined\ by\ the\ user.\ The\ game\ requires\ the\r\n\ player\ to\ match\ candies\ of\ the\ same\ colours\ into\ groups\ of\ 3\ or\ greater\ either\r\n\ vertically\ or\ horizontally.\ There\ are\ special\ candies\ that\ can\ be\ generated\ \r\n\ if\ the\ match\ is\ greater\ than\ 3\ or\ creates\ a\ cross-section\ between\ 2\ matches.\r\n\ Score\ will\ be\ calculated\ breaking\ candies\ and\ completing\ the\ objective.\ A\r\n\ player\ has\ a\ certain\ number\ of\ moves\ when\ playing\ so\ players\ must\ be\ wise\ with\r\n\ their\ decision-making.\ \r\n\ <p>\r\n\ This\ game\ was\ created\ by\ the\ following\ individuals\:\ \r\n\ Isaac\ Chan,\ Peterson\ Guo,\ Kelby\ To,\ Kevin\ Luo,\ Jett\ Miysaki,\ William\ Tsao.\ <br>\r\n\ Credit\ goes\ to\ Mr.Cohen\ for\ providing\ the\ following\ classes\:\ SuperStatBar\ <br>\r\n\ Credit\ goes\ to\ Greenfoot\ for\ providing\ the\ following\ classes\:\ Text,\ Counter\r\n\ <p>\r\n\ Sources\:\ <br>\r\n\ Candy\ Visuals\:\ King\ (developers\ of\ Candy\ Crush)\ <br>\r\n\ Game\ Sounds\:\ King\ (developers\ of\ Candy\ Crush)\ <br>\r\n\ \r\n\ @author\ Peterson\ Guo,\ Kevin\ Luo,\ Kelby\ To\ \r\n\ @version\ June\ 15,\ 2023\r\n
comment1.params=choice
comment1.target=MainWorld(boolean)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ MyWorld.\r\n
comment10.params=
comment10.target=Candy\ getClicked()
comment10.text=\r\n\ A\ method\ that\ returns\ the\ candy\ thats\ currently\ being\ clicked\r\n\ \r\n\ @return\ Candy\ \ \ \ The\ candy\ thats\ being\ clicked\r\n
comment11.params=
comment11.target=int\ getPoints()
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Act\ -\ do\ whatever\ the\ MainWorld\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment3.params=
comment3.target=void\ stopped()
comment3.text=\r\n\ A\ method\ that\ runs\ when\ the\ world\ is\ stopped.\r\n
comment4.params=c
comment4.target=boolean\ setClicked(Candy)
comment4.text=\r\n\ A\ method\ that\ returns\ a\ boolean\ depending\ on\ whether\ the\ selected\ candy\r\n\ can\ swap\ with\ another\ selected\ candy.\r\n\ \r\n\ @param\ c\ \ \ \ \ \ \ \ \ The\ first\ selected\ candy\r\n\ @return\ boolean\ \ A\ boolean\ that\ determines\ if\ a\ swap\ can\ be\ made\ \r\n
comment5.params=pts
comment5.target=void\ addPoints(int)
comment5.text=\r\n\ A\ method\ that\ adds\ points\ to\ the\ score\r\n\ \r\n\ @param\ pts\ \ \ The\ number\ of\ points\ the\ score\ increases\ by\r\n
comment6.params=
comment6.target=void\ decreaseMoves()
comment6.text=\r\n\ A\ method\ that\ decreases\ the\ number\ of\ moves\ the\ player\ has\ left\r\n
comment7.params=
comment7.target=void\ objectiveCompleted()
comment7.text=\r\n\ A\ method\ that\ determines\ if\ the\ objective\ is\ completed.\r\n
comment8.params=
comment8.target=boolean\ isObjectiveCompleted()
comment9.params=
comment9.target=GameGrid\ getGrid()
comment9.text=\r\n\ A\ method\ that\ returns\ the\ world's\ GameGrid\r\n\ \r\n\ @return\ GameGrid\ \ \ \ \ The\ game\ grid\ in\ the\ world\r\n
numComments=12
